//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PLCCom_Full_Test_App.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PLCCom_Full_Test_App.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die abort ähnelt.
        /// </summary>
        internal static string btnAbort_Text {
            get {
                return ResourceManager.GetString("btnAbort_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die accept
        ///connector ähnelt.
        /// </summary>
        internal static string btnAccept_Text {
            get {
                return ResourceManager.GetString("btnAccept_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die accept request ähnelt.
        /// </summary>
        internal static string btnAcceptRequest_Text {
            get {
                return ResourceManager.GetString("btnAcceptRequest_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Confirm Alarm ähnelt.
        /// </summary>
        internal static string btnAcknowledge_Text {
            get {
                return ResourceManager.GetString("btnAcknowledge_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die add
        ///connector ähnelt.
        /// </summary>
        internal static string btnAddConnector_Text {
            get {
                return ResourceManager.GetString("btnAddConnector_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die add request ähnelt.
        /// </summary>
        internal static string btnAddRequest_Text {
            get {
                return ResourceManager.GetString("btnAddRequest_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alarm Messages ähnelt.
        /// </summary>
        internal static string btnAlarm_Text {
            get {
                return ResourceManager.GetString("btnAlarm_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die backup block ähnelt.
        /// </summary>
        internal static string btnBackup_Block_Text {
            get {
                return ResourceManager.GetString("btnBackup_Block_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die get PLC info ähnelt.
        /// </summary>
        internal static string btnBasicInfo_Text {
            get {
                return ResourceManager.GetString("btnBasicInfo_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die block functions ähnelt.
        /// </summary>
        internal static string btnBlockFunctions_Text {
            get {
                return ResourceManager.GetString("btnBlockFunctions_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die get PLC blocklength ähnelt.
        /// </summary>
        internal static string btnBlockLen_Text {
            get {
                return ResourceManager.GetString("btnBlockLen_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die get PLC blocklist ähnelt.
        /// </summary>
        internal static string btnBlockList_Text {
            get {
                return ResourceManager.GetString("btnBlockList_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die close ähnelt.
        /// </summary>
        internal static string btnClose_Text {
            get {
                return ResourceManager.GetString("btnClose_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die connect 
        ///to PLC ähnelt.
        /// </summary>
        internal static string btnConnect_Text {
            get {
                return ResourceManager.GetString("btnConnect_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die get CPU mode ähnelt.
        /// </summary>
        internal static string btnCPUMode_Text {
            get {
                return ResourceManager.GetString("btnCPUMode_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PLCcom
        ///data server ähnelt.
        /// </summary>
        internal static string btnDataServer_Text {
            get {
                return ResourceManager.GetString("btnDataServer_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die delete block ähnelt.
        /// </summary>
        internal static string btnDeleteBlock_Text {
            get {
                return ResourceManager.GetString("btnDeleteBlock_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die diagnostic
        ///data ähnelt.
        /// </summary>
        internal static string btnDiagnoseBuffer_Text {
            get {
                return ResourceManager.GetString("btnDiagnoseBuffer_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die disconnect
        ///from PLC ähnelt.
        /// </summary>
        internal static string btnDisconnect_Text {
            get {
                return ResourceManager.GetString("btnDisconnect_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die edit settings ähnelt.
        /// </summary>
        internal static string btnEditConnectionSettings_Text {
            get {
                return ResourceManager.GetString("btnEditConnectionSettings_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die execute function ähnelt.
        /// </summary>
        internal static string btnExecute_Text {
            get {
                return ResourceManager.GetString("btnExecute_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die get PLC time ähnelt.
        /// </summary>
        internal static string btnGetPLCTime_Text {
            get {
                return ResourceManager.GetString("btnGetPLCTime_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die load requests ähnelt.
        /// </summary>
        internal static string btnLoadRequests_Text {
            get {
                return ResourceManager.GetString("btnLoadRequests_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die logging
        ///connectors ähnelt.
        /// </summary>
        internal static string btnLoggingSettings_Text {
            get {
                return ResourceManager.GetString("btnLoggingSettings_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die optimize
        ///access ähnelt.
        /// </summary>
        internal static string btnOptimizedReadWrite_Text {
            get {
                return ResourceManager.GetString("btnOptimizedReadWrite_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die other functions ähnelt.
        /// </summary>
        internal static string btnOtherFunctions_Text {
            get {
                return ResourceManager.GetString("btnOtherFunctions_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die get LED info ähnelt.
        /// </summary>
        internal static string btnPLCLEDInfo_Text {
            get {
                return ResourceManager.GetString("btnPLCLEDInfo_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read bcd ähnelt.
        /// </summary>
        internal static string btnreadBCD_Text {
            get {
                return ResourceManager.GetString("btnreadBCD_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read bit ähnelt.
        /// </summary>
        internal static string btnreadBit_Text {
            get {
                return ResourceManager.GetString("btnreadBit_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read rawdata ähnelt.
        /// </summary>
        internal static string btnreadBuffer_Text {
            get {
                return ResourceManager.GetString("btnreadBuffer_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read byte ähnelt.
        /// </summary>
        internal static string btnReadBytes_Text {
            get {
                return ResourceManager.GetString("btnReadBytes_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read collection ähnelt.
        /// </summary>
        internal static string btnReadCollection_Text {
            get {
                return ResourceManager.GetString("btnReadCollection_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read dint ähnelt.
        /// </summary>
        internal static string btnreadDInt_Text {
            get {
                return ResourceManager.GetString("btnreadDInt_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read datetime ähnelt.
        /// </summary>
        internal static string btnreadDT_Text {
            get {
                return ResourceManager.GetString("btnreadDT_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read dword ähnelt.
        /// </summary>
        internal static string btnreadDWORD_Text {
            get {
                return ResourceManager.GetString("btnreadDWORD_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read functions ähnelt.
        /// </summary>
        internal static string btnReadExample_Text {
            get {
                return ResourceManager.GetString("btnReadExample_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read int ähnelt.
        /// </summary>
        internal static string btnreadInt_Text {
            get {
                return ResourceManager.GetString("btnreadInt_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read real ähnelt.
        /// </summary>
        internal static string btnreadReal_Text {
            get {
                return ResourceManager.GetString("btnreadReal_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read S5Time ähnelt.
        /// </summary>
        internal static string btnreadS5Time_Text {
            get {
                return ResourceManager.GetString("btnreadS5Time_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read s7string ähnelt.
        /// </summary>
        internal static string btnreadS7_String_Text {
            get {
                return ResourceManager.GetString("btnreadS7_String_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read SSL ähnelt.
        /// </summary>
        internal static string btnReadSSL_SZL_Text {
            get {
                return ResourceManager.GetString("btnReadSSL_SZL_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read string ähnelt.
        /// </summary>
        internal static string btnreadString_Text {
            get {
                return ResourceManager.GetString("btnreadString_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read word ähnelt.
        /// </summary>
        internal static string btnreadWord_Text {
            get {
                return ResourceManager.GetString("btnreadWord_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die simple
        ///access ähnelt.
        /// </summary>
        internal static string btnReadWriteFunctions_Text {
            get {
                return ResourceManager.GetString("btnReadWriteFunctions_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die reject
        ///connector ähnelt.
        /// </summary>
        internal static string btnReject_Text {
            get {
                return ResourceManager.GetString("btnReject_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die remove
        ///connector ähnelt.
        /// </summary>
        internal static string btnRemoveConnector_Text {
            get {
                return ResourceManager.GetString("btnRemoveConnector_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die remove request ähnelt.
        /// </summary>
        internal static string btnRemoveRequest_Text {
            get {
                return ResourceManager.GetString("btnRemoveRequest_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die restore block ähnelt.
        /// </summary>
        internal static string btnRestore_Block_Text {
            get {
                return ResourceManager.GetString("btnRestore_Block_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die save settings ähnelt.
        /// </summary>
        internal static string btnSaveConnectionSettings_Text {
            get {
                return ResourceManager.GetString("btnSaveConnectionSettings_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die save log to clipboard ähnelt.
        /// </summary>
        internal static string btnSaveLogtoClipboard_Text {
            get {
                return ResourceManager.GetString("btnSaveLogtoClipboard_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die save log to file ähnelt.
        /// </summary>
        internal static string btnSaveLogtoFile_Text {
            get {
                return ResourceManager.GetString("btnSaveLogtoFile_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die save requests ähnelt.
        /// </summary>
        internal static string btnSaveRequests_Text {
            get {
                return ResourceManager.GetString("btnSaveRequests_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die send password ähnelt.
        /// </summary>
        internal static string btnsendPW_Text {
            get {
                return ResourceManager.GetString("btnsendPW_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die set PLC time ähnelt.
        /// </summary>
        internal static string btnsetPLCTime_Text {
            get {
                return ResourceManager.GetString("btnsetPLCTime_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die start PLC ähnelt.
        /// </summary>
        internal static string btnStartPLC_Text {
            get {
                return ResourceManager.GetString("btnStartPLC_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die run
        ///data server ähnelt.
        /// </summary>
        internal static string btnStartServer_Text {
            get {
                return ResourceManager.GetString("btnStartServer_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die stop PLC ähnelt.
        /// </summary>
        internal static string btnStopPLC_Text {
            get {
                return ResourceManager.GetString("btnStopPLC_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die stop
        ///data server ähnelt.
        /// </summary>
        internal static string btnStopServer_Text {
            get {
                return ResourceManager.GetString("btnStopServer_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write bcd ähnelt.
        /// </summary>
        internal static string btnwriteBCD_Text {
            get {
                return ResourceManager.GetString("btnwriteBCD_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write bit ähnelt.
        /// </summary>
        internal static string btnwriteBit_Text {
            get {
                return ResourceManager.GetString("btnwriteBit_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write rawdata ähnelt.
        /// </summary>
        internal static string btnwriteBuffer_Text {
            get {
                return ResourceManager.GetString("btnwriteBuffer_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write byte ähnelt.
        /// </summary>
        internal static string btnwriteByte_Text {
            get {
                return ResourceManager.GetString("btnwriteByte_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write dint ähnelt.
        /// </summary>
        internal static string btnwriteDInt_Text {
            get {
                return ResourceManager.GetString("btnwriteDInt_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write datetime ähnelt.
        /// </summary>
        internal static string btnwriteDT_Text {
            get {
                return ResourceManager.GetString("btnwriteDT_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write dword ähnelt.
        /// </summary>
        internal static string btnwriteDWord_Text {
            get {
                return ResourceManager.GetString("btnwriteDWord_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write functions ähnelt.
        /// </summary>
        internal static string btnWriteExample_Text {
            get {
                return ResourceManager.GetString("btnWriteExample_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write int ähnelt.
        /// </summary>
        internal static string btnwriteInt_Text {
            get {
                return ResourceManager.GetString("btnwriteInt_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write real ähnelt.
        /// </summary>
        internal static string btnwriteReal_Text {
            get {
                return ResourceManager.GetString("btnwriteReal_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write S5Time ähnelt.
        /// </summary>
        internal static string btnwriteS5Time_Text {
            get {
                return ResourceManager.GetString("btnwriteS5Time_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write s7string ähnelt.
        /// </summary>
        internal static string btnwriteS7_String_Text {
            get {
                return ResourceManager.GetString("btnwriteS7_String_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write string ähnelt.
        /// </summary>
        internal static string btnwriteString_Text {
            get {
                return ResourceManager.GetString("btnwriteString_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write word ähnelt.
        /// </summary>
        internal static string btnwriteWord_Text {
            get {
                return ResourceManager.GetString("btnwriteWord_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plc type decision help ähnelt.
        /// </summary>
        internal static string captionPlcTypeHelp {
            get {
                return ResourceManager.GetString("captionPlcTypeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die allow muliple bits ähnelt.
        /// </summary>
        internal static string chkAllowMultipleBits_Text {
            get {
                return ResourceManager.GetString("chkAllowMultipleBits_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die connect
        ///asynchronous ähnelt.
        /// </summary>
        internal static string chkAsyncConnect_TextAsync {
            get {
                return ResourceManager.GetString("chkAsyncConnect_TextAsync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die image active ähnelt.
        /// </summary>
        internal static string chkIsWriteImageActive_Text {
            get {
                return ResourceManager.GetString("chkIsWriteImageActive_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die log output active ähnelt.
        /// </summary>
        internal static string chkIsWriteLogActive_Text {
            get {
                return ResourceManager.GetString("chkIsWriteLogActive_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read with Optimize Mode &apos;On&apos; ähnelt.
        /// </summary>
        internal static string chkOptimized_Text {
            get {
                return ResourceManager.GetString("chkOptimized_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die single value ähnelt.
        /// </summary>
        internal static string chkSingleValue_Text {
            get {
                return ResourceManager.GetString("chkSingleValue_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alarm Text ähnelt.
        /// </summary>
        internal static string colAlarmText_Text {
            get {
                return ResourceManager.GetString("colAlarmText_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message Type ähnelt.
        /// </summary>
        internal static string colMessageType_Text {
            get {
                return ResourceManager.GetString("colMessageType_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timestamp ähnelt.
        /// </summary>
        internal static string colTimestamp_Text {
            get {
                return ResourceManager.GetString("colTimestamp_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die connect unsuccessful!  ähnelt.
        /// </summary>
        internal static string connect_unsuccessful {
            get {
                return ResourceManager.GetString("connect_unsuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to continue? ähnelt.
        /// </summary>
        internal static string Continue_Question {
            get {
                return ResourceManager.GetString("Continue_Question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Important: If you continue, the target block will be deleted without further request. ähnelt.
        /// </summary>
        internal static string Continue_Warning_Delete {
            get {
                return ResourceManager.GetString("Continue_Warning_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Important: If you continue, the target block will be written. Existing data will be overwritten without further request. ähnelt.
        /// </summary>
        internal static string Continue_Warning_Restore {
            get {
                return ResourceManager.GetString("Continue_Warning_Restore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Important: If you continue, the plctime will be overwritten without further request. ähnelt.
        /// </summary>
        internal static string Continue_Warning_SetTime {
            get {
                return ResourceManager.GetString("Continue_Warning_SetTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Important: If you continue, the plc will be started without further request. ähnelt.
        /// </summary>
        internal static string Continue_Warning_Start {
            get {
                return ResourceManager.GetString("Continue_Warning_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Important: If you continue, the plc will be stopped without further request. ähnelt.
        /// </summary>
        internal static string Continue_Warning_Stop {
            get {
                return ResourceManager.GetString("Continue_Warning_Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Important: If you continue, the target adress will be written. Existing data will be overwritten without further request. ähnelt.
        /// </summary>
        internal static string Continue_Warning_Write {
            get {
                return ResourceManager.GetString("Continue_Warning_Write", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error during browsing of Alarms ähnelt.
        /// </summary>
        internal static string error_browsing_alarms {
            get {
                return ResourceManager.GetString("error_browsing_alarms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alarm messages, doubleclick on Item for further details ähnelt.
        /// </summary>
        internal static string grbAction_Text {
            get {
                return ResourceManager.GetString("grbAction_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection settings ähnelt.
        /// </summary>
        internal static string grbConnection_Text {
            get {
                return ResourceManager.GetString("grbConnection_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Database connector settings ähnelt.
        /// </summary>
        internal static string grbDatabaseConnectorSettings_Text {
            get {
                return ResourceManager.GetString("grbDatabaseConnectorSettings_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Filesystem connector settings ähnelt.
        /// </summary>
        internal static string grbFilesystemConnectorSettings_Text {
            get {
                return ResourceManager.GetString("grbFilesystemConnectorSettings_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Information messages, doubleclick on Item for further details ähnelt.
        /// </summary>
        internal static string grbInformations_Text {
            get {
                return ResourceManager.GetString("grbInformations_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Access ähnelt.
        /// </summary>
        internal static string grpAccess_Text {
            get {
                return ResourceManager.GetString("grpAccess_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Action ähnelt.
        /// </summary>
        internal static string grpAction_Text {
            get {
                return ResourceManager.GetString("grpAction_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die action ähnelt.
        /// </summary>
        internal static string grpAction_Text1 {
            get {
                return ResourceManager.GetString("grpAction_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die add request ähnelt.
        /// </summary>
        internal static string grpAddress_Text {
            get {
                return ResourceManager.GetString("grpAddress_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adress ähnelt.
        /// </summary>
        internal static string grpAdress_Text {
            get {
                return ResourceManager.GetString("grpAdress_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Result ähnelt.
        /// </summary>
        internal static string grpResult_Text {
            get {
                return ResourceManager.GetString("grpResult_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Explanation of the read optimization mode ähnelt.
        /// </summary>
        internal static string Hint_Read_OptimizationMode_Overview {
            get {
                return ResourceManager.GetString("Hint_Read_OptimizationMode_Overview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NONE: 
        ///No optimization, all read requests are read one after the other. Safe but slow.
        ///
        ///CROSS_AREAS: 
        ///In CROSS_AREAS mode, the read requests are merged across areas. Advantage: fragmented areas (e.g., data across multiple datablocks) can be read and written simultaneously
        ///
        ///COMBINE_AREAS: 
        ///In COMBINE_AREAS mode, read requests from the same areas are combined. Advantage: Fast and high-performance access to data of the same areas (for example, data in the same datablock)
        ///
        ///AUTO: 
        ///PLCcom automatically  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Hint_Read_OptimizationMode_Text {
            get {
                return ResourceManager.GetString("Hint_Read_OptimizationMode_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Explanation of the write optimization mode ähnelt.
        /// </summary>
        internal static string Hint_Write_OptimizationMode_Overview {
            get {
                return ResourceManager.GetString("Hint_Write_OptimizationMode_Overview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NONE: 
        ///No optimization, all read requests are written one after the other. Safe but slow.
        ///
        ///CROSS_AREAS: 
        ///In CROSS_AREAS mode, the read requests are merged across areas. Advantage: fragmented areas (e.g., data across multiple datablocks) can be read and written simultaneously ähnelt.
        /// </summary>
        internal static string Hint_Write_OptimizationMode_Text {
            get {
                return ResourceManager.GetString("Hint_Write_OptimizationMode_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attention ähnelt.
        /// </summary>
        internal static string Important_question {
            get {
                return ResourceManager.GetString("Important_question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional Text 1 ähnelt.
        /// </summary>
        internal static string lblAdditionalText1_Text {
            get {
                return ResourceManager.GetString("lblAdditionalText1_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional Text 2 ähnelt.
        /// </summary>
        internal static string lblAdditionalText2_Text {
            get {
                return ResourceManager.GetString("lblAdditionalText2_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional Text 3 ähnelt.
        /// </summary>
        internal static string lblAdditionalText3_Text {
            get {
                return ResourceManager.GetString("lblAdditionalText3_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional Text 4 ähnelt.
        /// </summary>
        internal static string lblAdditionalText4_Text {
            get {
                return ResourceManager.GetString("lblAdditionalText4_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional Text 5 ähnelt.
        /// </summary>
        internal static string lblAdditionalText5_Text {
            get {
                return ResourceManager.GetString("lblAdditionalText5_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional Text 6 ähnelt.
        /// </summary>
        internal static string lblAdditionalText6_Text {
            get {
                return ResourceManager.GetString("lblAdditionalText6_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional Text 7 ähnelt.
        /// </summary>
        internal static string lblAdditionalText7_Text {
            get {
                return ResourceManager.GetString("lblAdditionalText7_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional Text 8 ähnelt.
        /// </summary>
        internal static string lblAdditionalText8_Text {
            get {
                return ResourceManager.GetString("lblAdditionalText8_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional Text 9 ähnelt.
        /// </summary>
        internal static string lblAdditionalText9_Text {
            get {
                return ResourceManager.GetString("lblAdditionalText9_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alarm Class Id ähnelt.
        /// </summary>
        internal static string lblAlarmClassId_Text {
            get {
                return ResourceManager.GetString("lblAlarmClassId_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alarm Id ähnelt.
        /// </summary>
        internal static string lblAlarmId_Text {
            get {
                return ResourceManager.GetString("lblAlarmId_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alarm Number ähnelt.
        /// </summary>
        internal static string lblAlarmNo_Text {
            get {
                return ResourceManager.GetString("lblAlarmNo_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alarm Text ähnelt.
        /// </summary>
        internal static string lblAlarmText_Text {
            get {
                return ResourceManager.GetString("lblAlarmText_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die auto connect ähnelt.
        /// </summary>
        internal static string lblAutoConnect2 {
            get {
                return ResourceManager.GetString("lblAutoConnect2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die baudrate ähnelt.
        /// </summary>
        internal static string lblBaudrate_Text {
            get {
                return ResourceManager.GetString("lblBaudrate_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bit (only for bit operations) ähnelt.
        /// </summary>
        internal static string lblBit_Text {
            get {
                return ResourceManager.GetString("lblBit_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die busAdressLocal ähnelt.
        /// </summary>
        internal static string lblBusAdressLocal_Text {
            get {
                return ResourceManager.GetString("lblBusAdressLocal_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die busAdressPLC ähnelt.
        /// </summary>
        internal static string lblBusAdressPLC_Text {
            get {
                return ResourceManager.GetString("lblBusAdressPLC_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die busspeed ähnelt.
        /// </summary>
        internal static string lblBusSpeed_Text {
            get {
                return ResourceManager.GetString("lblBusSpeed_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PLCCom supports all database connections that derive from DbConnection- Object.
        ///PLCCom been tested with:
        ///=&gt; Oracle
        ///=&gt; MS SQL-Server
        ///=&gt; MySQL
        ///=&gt; PostgresSQL
        ///=&gt; OdbcConnection
        ///=&gt; OleConnection
        ///=&gt; Firebird
        ///=&gt; SQLITE ähnelt.
        /// </summary>
        internal static string lblConnectionMessage_Text {
            get {
                return ResourceManager.GetString("lblConnectionMessage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MSSQL connectionstring ähnelt.
        /// </summary>
        internal static string lblConnectionString_Text {
            get {
                return ResourceManager.GetString("lblConnectionString_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die connection type ähnelt.
        /// </summary>
        internal static string lblConnectionType_Text {
            get {
                return ResourceManager.GetString("lblConnectionType_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die new connector name ähnelt.
        /// </summary>
        internal static string lblConnectorName_Text {
            get {
                return ResourceManager.GetString("lblConnectorName_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die type of new connector ähnelt.
        /// </summary>
        internal static string lblConnectorType_Text {
            get {
                return ResourceManager.GetString("lblConnectorType_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die data type ähnelt.
        /// </summary>
        internal static string lblDataType_Text {
            get {
                return ResourceManager.GetString("lblDataType_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DB (only for DB, use 0 otherwise) ähnelt.
        /// </summary>
        internal static string lblDB_Text {
            get {
                return ResourceManager.GetString("lblDB_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die encryption password
        ///(empty = no encryption) ähnelt.
        /// </summary>
        internal static string lblEncryptionPassword_Text {
            get {
                return ResourceManager.GetString("lblEncryptionPassword_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die target folder ähnelt.
        /// </summary>
        internal static string lblFolderName_Text {
            get {
                return ResourceManager.GetString("lblFolderName_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die function ähnelt.
        /// </summary>
        internal static string lblFunction_Text {
            get {
                return ResourceManager.GetString("lblFunction_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die image output format ähnelt.
        /// </summary>
        internal static string lblImageOutputFormat_Text {
            get {
                return ResourceManager.GetString("lblImageOutputFormat_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;= The connection string for the database connection. 
        ///      In this example, only MS SQL Server ähnelt.
        /// </summary>
        internal static string lblInfoConnectionString_Text {
            get {
                return ResourceManager.GetString("lblInfoConnectionString_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;= The desired name of new connector. Name must be unique ähnelt.
        /// </summary>
        internal static string lblInfoConnectorName_Text {
            get {
                return ResourceManager.GetString("lblInfoConnectorName_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ‚Logging-Connectors‘ store read variable data to  the file system or a SQL database for further use.
        ///Due to not included database provider this example just shows filesystem and SQL-Server connections. ähnelt.
        /// </summary>
        internal static string lblInfoCreateListener_Text {
            get {
                return ResourceManager.GetString("lblInfoCreateListener_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;= If you enter an encryption password, the data is stored in encrypted form. 
        ///     You can read the data using the supplied decryption tool again. ähnelt.
        /// </summary>
        internal static string lblInfoEncryptionPassword_Text {
            get {
                return ResourceManager.GetString("lblInfoEncryptionPassword_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;=The desired output folder for the log files and the data image. ähnelt.
        /// </summary>
        internal static string lblInfoFolderName_Text {
            get {
                return ResourceManager.GetString("lblInfoFolderName_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;= You can output the data for the image in shallow .dat format (csv) or in .xml format ähnelt.
        /// </summary>
        internal static string lblInfoImageOutputFormat_Text {
            get {
                return ResourceManager.GetString("lblInfoImageOutputFormat_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;= Allows you to write the current server data image in the file system for your further use ähnelt.
        /// </summary>
        internal static string lblInfoIsWriteImageActive_Text {
            get {
                return ResourceManager.GetString("lblInfoIsWriteImageActive_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;= Allows you to write the current server data image in a database table for your further use ähnelt.
        /// </summary>
        internal static string lblInfoIsWriteImageActiveDB_Text {
            get {
                return ResourceManager.GetString("lblInfoIsWriteImageActiveDB_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;=Turns data output in a log archive on or off ähnelt.
        /// </summary>
        internal static string lblInfoIsWriteLogActive_Text {
            get {
                return ResourceManager.GetString("lblInfoIsWriteLogActive_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;=Turns data output in a log table archive on or off ähnelt.
        /// </summary>
        internal static string lblInfoIsWriteLogActiveDB_Text {
            get {
                return ResourceManager.GetString("lblInfoIsWriteLogActiveDB_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;= You can restrict the maximum age of files. 
        ///     When the value is exceeded the old files are automatically deleted. -1 = Disabled. ähnelt.
        /// </summary>
        internal static string lblInfoMaxAgeHours_Text {
            get {
                return ResourceManager.GetString("lblInfoMaxAgeHours_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;= You can restrict the maximum size of files. 
        ///     When the value is exceeded the old files are automatically deleted. -1 = Disabled. ähnelt.
        /// </summary>
        internal static string lblInfoMaxFileSizeMB_Text {
            get {
                return ResourceManager.GetString("lblInfoMaxFileSizeMB_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;= You can restrict the maximum number of files. 
        ///     When the value is exceeded the old files are automatically deleted. -1 = Disabled. ähnelt.
        /// </summary>
        internal static string lblInfoMaxNumberOfLogFiles_Text {
            get {
                return ResourceManager.GetString("lblInfoMaxNumberOfLogFiles_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Info Text ähnelt.
        /// </summary>
        internal static string lblInfoText_Text {
            get {
                return ResourceManager.GetString("lblInfoText_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string lblIsWriteImageActive_Text {
            get {
                return ResourceManager.GetString("lblIsWriteImageActive_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;= Allows you to write the current server data image in the file system for your further use ähnelt.
        /// </summary>
        internal static string lblIsWriteImageActiveDB_Text {
            get {
                return ResourceManager.GetString("lblIsWriteImageActiveDB_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die language ähnelt.
        /// </summary>
        internal static string lblLanguage_Text {
            get {
                return ResourceManager.GetString("lblLanguage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quantity ähnelt.
        /// </summary>
        internal static string lblLength_Text {
            get {
                return ResourceManager.GetString("lblLength_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local Port (default = 0) ähnelt.
        /// </summary>
        internal static string lblLocalPort_Text {
            get {
                return ResourceManager.GetString("lblLocalPort_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die diagnostic output ähnelt.
        /// </summary>
        internal static string lblLog_Text {
            get {
                return ResourceManager.GetString("lblLog_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die max age in hours ähnelt.
        /// </summary>
        internal static string lblMaxAgeHours_Text {
            get {
                return ResourceManager.GetString("lblMaxAgeHours_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die max file size in MB ähnelt.
        /// </summary>
        internal static string lblMaxFileSizeMB_Text {
            get {
                return ResourceManager.GetString("lblMaxFileSizeMB_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die max. idle time until closing the port ähnelt.
        /// </summary>
        internal static string lblmaxIdleTime_Text {
            get {
                return ResourceManager.GetString("lblmaxIdleTime_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die max number of log files ähnelt.
        /// </summary>
        internal static string lblMaxNumberOfLogFiles_Text {
            get {
                return ResourceManager.GetString("lblMaxNumberOfLogFiles_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message ähnelt.
        /// </summary>
        internal static string lblMessage_Text {
            get {
                return ResourceManager.GetString("lblMessage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message Type ähnelt.
        /// </summary>
        internal static string lblMessageType_Text {
            get {
                return ResourceManager.GetString("lblMessageType_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read / write mode ähnelt.
        /// </summary>
        internal static string lblMode_Text {
            get {
                return ResourceManager.GetString("lblMode_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter the values separated by return: ähnelt.
        /// </summary>
        internal static string lblMultipleValues_Text {
            get {
                return ResourceManager.GetString("lblMultipleValues_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die prioritization ähnelt.
        /// </summary>
        internal static string lblOperationOrder_Text {
            get {
                return ResourceManager.GetString("lblOperationOrder_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plc Password ähnelt.
        /// </summary>
        internal static string lblPlcPassword_Text {
            get {
                return ResourceManager.GetString("lblPlcPassword_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PLC port (default ISO 102) ähnelt.
        /// </summary>
        internal static string lblPLCPort_Text {
            get {
                return ResourceManager.GetString("lblPLCPort_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PLC type ähnelt.
        /// </summary>
        internal static string lblPLCType_Text {
            get {
                return ResourceManager.GetString("lblPLCType_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Producer ähnelt.
        /// </summary>
        internal static string lblProducer_Text {
            get {
                return ResourceManager.GetString("lblProducer_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rack ID ähnelt.
        /// </summary>
        internal static string lblRack_Text {
            get {
                return ResourceManager.GetString("lblRack_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read address ähnelt.
        /// </summary>
        internal static string lblReadAddress_Text {
            get {
                return ResourceManager.GetString("lblReadAddress_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Read optimization ähnelt.
        /// </summary>
        internal static string lblReadOptimizationMode_Text {
            get {
                return ResourceManager.GetString("lblReadOptimizationMode_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Region ähnelt.
        /// </summary>
        internal static string lblRegion_Text {
            get {
                return ResourceManager.GetString("lblRegion_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die enter serialcode first     &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ähnelt.
        /// </summary>
        internal static string lblSerialCode_Text {
            get {
                return ResourceManager.GetString("lblSerialCode_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Slot ID ähnelt.
        /// </summary>
        internal static string lblSlot_Text {
            get {
                return ResourceManager.GetString("lblSlot_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die startadress (usually in bytes) ähnelt.
        /// </summary>
        internal static string lblStartAdress_Text {
            get {
                return ResourceManager.GetString("lblStartAdress_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alarm State ähnelt.
        /// </summary>
        internal static string lblState_Text {
            get {
                return ResourceManager.GetString("lblState_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timestamp Acknowledge ähnelt.
        /// </summary>
        internal static string lblTSAck_Text {
            get {
                return ResourceManager.GetString("lblTSAck_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timestamp Coming ähnelt.
        /// </summary>
        internal static string lblTSComing_Text {
            get {
                return ResourceManager.GetString("lblTSComing_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timestamp Going ähnelt.
        /// </summary>
        internal static string lblTsGoing_Text {
            get {
                return ResourceManager.GetString("lblTsGoing_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter the desired value: ähnelt.
        /// </summary>
        internal static string lblValues_Text {
            get {
                return ResourceManager.GetString("lblValues_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write address ähnelt.
        /// </summary>
        internal static string lblWriteAddress_Text {
            get {
                return ResourceManager.GetString("lblWriteAddress_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Write optimization ähnelt.
        /// </summary>
        internal static string lblWriteOptimizationMode_Text {
            get {
                return ResourceManager.GetString("lblWriteOptimizationMode_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local Serviceport (default 0) ähnelt.
        /// </summary>
        internal static string Local_Serviceport_Text {
            get {
                return ResourceManager.GetString("Local_Serviceport_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ePLCType member Logo_compatibel is obsolete please use Logo0BA7_compatibel or Logo0BA8_compatibel ähnelt.
        /// </summary>
        internal static string logo_compatibel_is_obsolete {
            get {
                return ResourceManager.GetString("logo_compatibel_is_obsolete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start Example ähnelt.
        /// </summary>
        internal static string main_Text {
            get {
                return ResourceManager.GetString("main_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message ähnelt.
        /// </summary>
        internal static string Message {
            get {
                return ResourceManager.GetString("Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die before you could use the &apos;Read Collection&apos; option, you have to configure the marked region (Edit Collection) code-area! ähnelt.
        /// </summary>
        internal static string Message_ReadCollection {
            get {
                return ResourceManager.GetString("Message_ReadCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select the appropriate PLC type from the list opposite. 
        ///
        ///If you want to access a 1200 or 1500 PLC symbolically, please select the type: Symbolic_Tls13
        ///
        ///Please note: Certain requirements must be met for symbolic access:
        ///
        ///1. at least HMI access must be enabled in the controller without a password as a protection level. 
        ///
        ///2. the controller must have been created with at least TIA version 17. If a data block has been created with a previous version, it must have been recompiled once with TIA fro [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string messagePlcTypeHelp {
            get {
                return ResourceManager.GetString("messagePlcTypeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Messsage:  ähnelt.
        /// </summary>
        internal static string MessageText {
            get {
                return ResourceManager.GetString("MessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die not  successful deleted ähnelt.
        /// </summary>
        internal static string not_successful_deleted {
            get {
                return ResourceManager.GetString("not_successful_deleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die operation aborted ähnelt.
        /// </summary>
        internal static string operation_aborted {
            get {
                return ResourceManager.GetString("operation_aborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PLCcom automatically selects the best optimization method. Only the minimum required PLC read accesses are carried out.
        ///Only in Expert edition available ähnelt.
        /// </summary>
        internal static string OptimizationMode_AUTO_Text {
            get {
                return ResourceManager.GetString("OptimizationMode_AUTO_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In COMBINE_AREAS mode, read requests from the same areas are combined. Advantage: Fast and high-performance access to data of the same areas (for example, data in the same datablock) ähnelt.
        /// </summary>
        internal static string OptimizationMode_COMBINE_AREAS_Text {
            get {
                return ResourceManager.GetString("OptimizationMode_COMBINE_AREAS_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In CROSS_AREAS mode, the read requests are merged across areas. Advantage: fragmented areas (e.g., data across multiple datablocks) can be read and written simultaneously ähnelt.
        /// </summary>
        internal static string OptimizationMode_CROSS_AREAS_Text {
            get {
                return ResourceManager.GetString("OptimizationMode_CROSS_AREAS_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No optimization, all read requests are read or written one after the other. Stable but slow. 
        ///Only recommended for troubleshooting. ähnelt.
        /// </summary>
        internal static string OptimizationMode_NONE_Text {
            get {
                return ResourceManager.GetString("OptimizationMode_NONE_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error occured while parsing! valuestring is not valid! ähnelt.
        /// </summary>
        internal static string ParseError {
            get {
                return ResourceManager.GetString("ParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project Import done! ähnelt.
        /// </summary>
        internal static string project_import_done {
            get {
                return ResourceManager.GetString("project_import_done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project Import starts... ähnelt.
        /// </summary>
        internal static string project_import_starts {
            get {
                return ResourceManager.GetString("project_import_starts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read on PLC ähnelt.
        /// </summary>
        internal static string rbRead_Text {
            get {
                return ResourceManager.GetString("rbRead_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write to PLC ähnelt.
        /// </summary>
        internal static string rbWrite_Text {
            get {
                return ResourceManager.GetString("rbWrite_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die read ähnelt.
        /// </summary>
        internal static string read {
            get {
                return ResourceManager.GetString("read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die reading blocklist ähnelt.
        /// </summary>
        internal static string reading_blocklist {
            get {
                return ResourceManager.GetString("reading_blocklist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Serviceport (default 10001) ähnelt.
        /// </summary>
        internal static string Serviceport_Text {
            get {
                return ResourceManager.GetString("Serviceport_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die starting backup ähnelt.
        /// </summary>
        internal static string starting_backup {
            get {
                return ResourceManager.GetString("starting_backup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnected ähnelt.
        /// </summary>
        internal static string State_closed {
            get {
                return ResourceManager.GetString("State_closed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Closing... ähnelt.
        /// </summary>
        internal static string State_closing {
            get {
                return ResourceManager.GetString("State_closing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connected ähnelt.
        /// </summary>
        internal static string State_connected {
            get {
                return ResourceManager.GetString("State_connected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connecting... ähnelt.
        /// </summary>
        internal static string State_connecting {
            get {
                return ResourceManager.GetString("State_connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  successful deleted ähnelt.
        /// </summary>
        internal static string successful_deleted {
            get {
                return ResourceManager.GetString("successful_deleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  successful saved in  ähnelt.
        /// </summary>
        internal static string successful_saved {
            get {
                return ResourceManager.GetString("successful_saved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  successful saved in PLC from File  ähnelt.
        /// </summary>
        internal static string successful_saved_PLC {
            get {
                return ResourceManager.GetString("successful_saved_PLC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data saved successfully! ähnelt.
        /// </summary>
        internal static string successfully_saved {
            get {
                return ResourceManager.GetString("successfully_saved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timestamp ähnelt.
        /// </summary>
        internal static string Timestamp {
            get {
                return ResourceManager.GetString("Timestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Too many windows open! Please close all child window first! ähnelt.
        /// </summary>
        internal static string to_many_windows {
            get {
                return ResourceManager.GetString("to_many_windows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pending alarms can be viewed and acknowledged in this window. With doubleclick on a item, you can see the message details. ähnelt.
        /// </summary>
        internal static string txtInfoAlarms_Text {
            get {
                return ResourceManager.GetString("txtInfoAlarms_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In this window you can read the object list, call up the length of individual objects. 
        ///In addition, functions for backup and restore are available. ähnelt.
        /// </summary>
        internal static string txtInfoBF_Text {
            get {
                return ResourceManager.GetString("txtInfoBF_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You can find help in the document &apos;Documentation_PLCcom_database_interface_english.pdf&apos; ähnelt.
        /// </summary>
        internal static string txtInfoDocu_Text_DB {
            get {
                return ResourceManager.GetString("txtInfoDocu_Text_DB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You can find help in the document &apos;Documentation_PLCCom_interface_for_filesystem_english.pdf&apos; ähnelt.
        /// </summary>
        internal static string txtInfoDocu_Text_file {
            get {
                return ResourceManager.GetString("txtInfoDocu_Text_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The PLCCom data server monitors autonomous data in the PLC in an adjustable cycle and notifies the parent software for a change with an event. ähnelt.
        /// </summary>
        internal static string txtInfoDS_Text {
            get {
                return ResourceManager.GetString("txtInfoDS_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Thank you for using our PLCCom component.
        ///Before you can run PLCCom, please enter your license information.
        ///Please take the data from the email that you received after download, or from your license certificate. ähnelt.
        /// </summary>
        internal static string txtInfoLI_Text {
            get {
                return ResourceManager.GetString("txtInfoLI_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ‚Logging-Connectors‘ store read variable data to  the file system or a SQL database for further use.
        ///Continuous archiving and saving an Image with just a few rows of code. ähnelt.
        /// </summary>
        internal static string txtInfoLoggingConnectors_Text {
            get {
                return ResourceManager.GetString("txtInfoLoggingConnectors_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die defined logging connectors ähnelt.
        /// </summary>
        internal static string txtInfoLoggingDefinedConnectors_Text {
            get {
                return ResourceManager.GetString("txtInfoLoggingDefinedConnectors_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In this window, you can start and stop the PLC. In addition, you can reading basic data from hardware, get and set PLC-clock and retrieve diagnostic data. ähnelt.
        /// </summary>
        internal static string txtInfoOF_Text {
            get {
                return ResourceManager.GetString("txtInfoOF_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You can execute single read and write processes on this window. For optimized read processes please use the ReadDataRequestCollection. ähnelt.
        /// </summary>
        internal static string txtInfoRB_OR_Text {
            get {
                return ResourceManager.GetString("txtInfoRB_OR_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ReadWriteRequestSet: read and write processes will be assembled and optimized due to minimize the necessary PLC accesses. ähnelt.
        /// </summary>
        internal static string txtInfoRCB_Text {
            get {
                return ResourceManager.GetString("txtInfoRCB_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In this window, individual requests can be defined for read or write operations. You can read the result at the bottom of the text box. ähnelt.
        /// </summary>
        internal static string txtInfoRequest_Text {
            get {
                return ResourceManager.GetString("txtInfoRequest_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In this window, you can read or write symbolic variables. ähnelt.
        /// </summary>
        internal static string txtInfosSymbRBText {
            get {
                return ResourceManager.GetString("txtInfosSymbRBText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This example program shows you all provided PLCCom functions. It also offers easy code examples for a better understanding of the program interface.
        ///
        ///Caution:
        ///With the product ‘PLCCom’ and also with the example code, the user or third party will be put in a position to control plants, machines or similar. Directly changes to a connected PLC are possible. It is possible that machines with moving part startup without advance warnings. This could causes severe injuries till death. Ensure that nobody gets in [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string txtWarning_Text {
            get {
                return ResourceManager.GetString("txtWarning_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die undefinend connection type ähnelt.
        /// </summary>
        internal static string undefinend_Connectiontype {
            get {
                return ResourceManager.GetString("undefinend_Connectiontype", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die undefinend PLC type ähnelt.
        /// </summary>
        internal static string undefinend_PLCType {
            get {
                return ResourceManager.GetString("undefinend_PLCType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Important: If multiple bits are present, this WriteRequest can not be processed optimally. All bits are written one after the other. It is better and more efficient if a separate WriteRequest is used for each bit. ähnelt.
        /// </summary>
        internal static string warning_allow_multiple_bits {
            get {
                return ResourceManager.GetString("warning_allow_multiple_bits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die write ähnelt.
        /// </summary>
        internal static string write {
            get {
                return ResourceManager.GetString("write", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die unknown data type ähnelt.
        /// </summary>
        internal static string wrong_datatype {
            get {
                return ResourceManager.GetString("wrong_datatype", resourceCulture);
            }
        }
    }
}
